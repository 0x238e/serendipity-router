package serendipity_router.isa

import chisel3.util.BitPat

object Instructions {
  def BEQ: BitPat = BitPat("b?????????????????000?????1100011")

  def BNE: BitPat = BitPat("b?????????????????001?????1100011")

  def BLT: BitPat = BitPat("b?????????????????100?????1100011")

  def BGE: BitPat = BitPat("b?????????????????101?????1100011")

  def BLTU: BitPat = BitPat("b?????????????????110?????1100011")

  def BGEU: BitPat = BitPat("b?????????????????111?????1100011")

  def JALR: BitPat = BitPat("b?????????????????000?????1100111")

  def JAL: BitPat = BitPat("b?????????????????????????1101111")

  def LUI: BitPat = BitPat("b?????????????????????????0110111")

  def AUIPC: BitPat = BitPat("b?????????????????????????0010111")

  def ADDI: BitPat = BitPat("b?????????????????000?????0010011")

  def SLLI: BitPat = BitPat("b000000???????????001?????0010011")

  def SLTI: BitPat = BitPat("b?????????????????010?????0010011")

  def SLTIU: BitPat = BitPat("b?????????????????011?????0010011")

  def XORI: BitPat = BitPat("b?????????????????100?????0010011")

  def SRLI: BitPat = BitPat("b000000???????????101?????0010011")

  def SRAI: BitPat = BitPat("b010000???????????101?????0010011")

  def ORI: BitPat = BitPat("b?????????????????110?????0010011")

  def ANDI: BitPat = BitPat("b?????????????????111?????0010011")

  def ADD: BitPat = BitPat("b0000000??????????000?????0110011")

  def SUB: BitPat = BitPat("b0100000??????????000?????0110011")

  def SLL: BitPat = BitPat("b0000000??????????001?????0110011")

  def SLT: BitPat = BitPat("b0000000??????????010?????0110011")

  def SLTU: BitPat = BitPat("b0000000??????????011?????0110011")

  def XOR: BitPat = BitPat("b0000000??????????100?????0110011")

  def SRL: BitPat = BitPat("b0000000??????????101?????0110011")

  def SRA: BitPat = BitPat("b0100000??????????101?????0110011")

  def OR: BitPat = BitPat("b0000000??????????110?????0110011")

  def AND: BitPat = BitPat("b0000000??????????111?????0110011")

  def ADDIW: BitPat = BitPat("b?????????????????000?????0011011")

  def SLLIW: BitPat = BitPat("b0000000??????????001?????0011011")

  def SRLIW: BitPat = BitPat("b0000000??????????101?????0011011")

  def SRAIW: BitPat = BitPat("b0100000??????????101?????0011011")

  def ADDW: BitPat = BitPat("b0000000??????????000?????0111011")

  def SUBW: BitPat = BitPat("b0100000??????????000?????0111011")

  def SLLW: BitPat = BitPat("b0000000??????????001?????0111011")

  def SRLW: BitPat = BitPat("b0000000??????????101?????0111011")

  def SRAW: BitPat = BitPat("b0100000??????????101?????0111011")

  def LB: BitPat = BitPat("b?????????????????000?????0000011")

  def LH: BitPat = BitPat("b?????????????????001?????0000011")

  def LW: BitPat = BitPat("b?????????????????010?????0000011")

  def LD: BitPat = BitPat("b?????????????????011?????0000011")

  def LBU: BitPat = BitPat("b?????????????????100?????0000011")

  def LHU: BitPat = BitPat("b?????????????????101?????0000011")

  def LWU: BitPat = BitPat("b?????????????????110?????0000011")

  def SB: BitPat = BitPat("b?????????????????000?????0100011")

  def SH: BitPat = BitPat("b?????????????????001?????0100011")

  def SW: BitPat = BitPat("b?????????????????010?????0100011")

  def SD: BitPat = BitPat("b?????????????????011?????0100011")

  def FENCE: BitPat = BitPat("b?????????????????000?????0001111")

  def FENCE_I: BitPat = BitPat("b?????????????????001?????0001111")

  def MUL: BitPat = BitPat("b0000001??????????000?????0110011")

  def MULH: BitPat = BitPat("b0000001??????????001?????0110011")

  def MULHSU: BitPat = BitPat("b0000001??????????010?????0110011")

  def MULHU: BitPat = BitPat("b0000001??????????011?????0110011")

  def DIV: BitPat = BitPat("b0000001??????????100?????0110011")

  def DIVU: BitPat = BitPat("b0000001??????????101?????0110011")

  def REM: BitPat = BitPat("b0000001??????????110?????0110011")

  def REMU: BitPat = BitPat("b0000001??????????111?????0110011")

  def MULW: BitPat = BitPat("b0000001??????????000?????0111011")

  def DIVW: BitPat = BitPat("b0000001??????????100?????0111011")

  def DIVUW: BitPat = BitPat("b0000001??????????101?????0111011")

  def REMW: BitPat = BitPat("b0000001??????????110?????0111011")

  def REMUW: BitPat = BitPat("b0000001??????????111?????0111011")

  def LR_W: BitPat = BitPat("b00010??00000?????010?????0101111")

  def SC_W: BitPat = BitPat("b00011????????????010?????0101111")

  def LR_D: BitPat = BitPat("b00010??00000?????011?????0101111")

  def SC_D: BitPat = BitPat("b00011????????????011?????0101111")

  def ECALL: BitPat = BitPat("b00000000000000000000000001110011")

  def EBREAK: BitPat = BitPat("b00000000000100000000000001110011")

  def URET: BitPat = BitPat("b00000000001000000000000001110011")

  def MRET: BitPat = BitPat("b00110000001000000000000001110011")

  def DRET: BitPat = BitPat("b01111011001000000000000001110011")

  def SFENCE_VMA: BitPat = BitPat("b0001001??????????000000001110011")

  def WFI: BitPat = BitPat("b00010000010100000000000001110011")

  def CSRRW: BitPat = BitPat("b?????????????????001?????1110011")

  def CSRRS: BitPat = BitPat("b?????????????????010?????1110011")

  def CSRRC: BitPat = BitPat("b?????????????????011?????1110011")

  def CSRRWI: BitPat = BitPat("b?????????????????101?????1110011")

  def CSRRSI: BitPat = BitPat("b?????????????????110?????1110011")

  def CSRRCI: BitPat = BitPat("b?????????????????111?????1110011")

  def CUSTOM0: BitPat = BitPat("b?????????????????000?????0001011")

  def CUSTOM0_RS1: BitPat = BitPat("b?????????????????010?????0001011")

  def CUSTOM0_RS1_RS2: BitPat = BitPat("b?????????????????011?????0001011")

  def CUSTOM0_RD: BitPat = BitPat("b?????????????????100?????0001011")

  def CUSTOM0_RD_RS1: BitPat = BitPat("b?????????????????110?????0001011")

  def CUSTOM0_RD_RS1_RS2: BitPat = BitPat("b?????????????????111?????0001011")

  def CUSTOM1: BitPat = BitPat("b?????????????????000?????0101011")

  def CUSTOM1_RS1: BitPat = BitPat("b?????????????????010?????0101011")

  def CUSTOM1_RS1_RS2: BitPat = BitPat("b?????????????????011?????0101011")

  def CUSTOM1_RD: BitPat = BitPat("b?????????????????100?????0101011")

  def CUSTOM1_RD_RS1: BitPat = BitPat("b?????????????????110?????0101011")

  def CUSTOM1_RD_RS1_RS2: BitPat = BitPat("b?????????????????111?????0101011")

  def CUSTOM2: BitPat = BitPat("b?????????????????000?????1011011")

  def CUSTOM2_RS1: BitPat = BitPat("b?????????????????010?????1011011")

  def CUSTOM2_RS1_RS2: BitPat = BitPat("b?????????????????011?????1011011")

  def CUSTOM2_RD: BitPat = BitPat("b?????????????????100?????1011011")

  def CUSTOM2_RD_RS1: BitPat = BitPat("b?????????????????110?????1011011")

  def CUSTOM2_RD_RS1_RS2: BitPat = BitPat("b?????????????????111?????1011011")

  def CUSTOM3: BitPat = BitPat("b?????????????????000?????1111011")

  def CUSTOM3_RS1: BitPat = BitPat("b?????????????????010?????1111011")

  def CUSTOM3_RS1_RS2: BitPat = BitPat("b?????????????????011?????1111011")

  def CUSTOM3_RD: BitPat = BitPat("b?????????????????100?????1111011")

  def CUSTOM3_RD_RS1: BitPat = BitPat("b?????????????????110?????1111011")

  def CUSTOM3_RD_RS1_RS2: BitPat = BitPat("b?????????????????111?????1111011")

  def SLLI_RV32: BitPat = BitPat("b0000000??????????001?????0010011")

  def SRLI_RV32: BitPat = BitPat("b0000000??????????101?????0010011")

  def SRAI_RV32: BitPat = BitPat("b0100000??????????101?????0010011")

  def RDCYCLE: BitPat = BitPat("b11000000000000000010?????1110011")

  def RDTIME: BitPat = BitPat("b11000000000100000010?????1110011")

  def RDINSTRET: BitPat = BitPat("b11000000001000000010?????1110011")

  def RDCYCLEH: BitPat = BitPat("b11001000000000000010?????1110011")

  def RDTIMEH: BitPat = BitPat("b11001000000100000010?????1110011")

  def RDINSTRETH: BitPat = BitPat("b11001000001000000010?????1110011")

  /* Custom complex instructions */
//  def MOVN: BitPat = BitPat("b?????????????????????????1110111")

//  def VADD_DD: BitPat = BitPat("b?????????????????????????1110111")
}
